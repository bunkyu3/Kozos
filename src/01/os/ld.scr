/*機械語コードや静的領域をどのようにアドレス割当するのかを決める*/

OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

MEMORY	/*各メモリ領域を定義*/
{
	ramall(rwx)		: o = 0xffbf20, l = 0x004000
	ram(rwx)		: o = 0xffc020, l = 0x003f00
	stack(rw)		: o = 0xffff00, l = 0x000000	/*end of RAM*/
}

SECTIONS	/*以下はセクション定義*/
{
	/*テキスト領域*/
	.text : {				/*.textというセクションを作成*/
		_text_start = . ;	/*textセクションの先頭を指すシンボルを配置*/
		*(.text)			/*各オブジェクトファイルの.textセクションの内容がここに集められる*/
		_etext = . ;		/*.textセクションの終端を指すシンボルを配置*/
	} > ram							

	.rodata : {	/*.rodataというセクションを作成、const定義した変数や文字列リテラルなどを配置*/
		_rodata_start = . ;
		*(.strings)
		*(.rodata)
		*(.rodata.*)
		_erodata = . ;
	} > ram

	/*データ領域*/
	.data : {
		_data_start = . ;	
		*(.data)
		_edata = . ;
	} > ram	

	/*BSS領域*/
	.bss : {
		_bss_start = . ;
		*(.bss)
		*(COMMON)
		_ebss = . ;
	} > ram	

	. = ALIGN(4);		/*ロケーション・カウンタを４の倍数にする*/
	_end = . ;			/*_endシンボル（変数みたいなもの）を.bssの終端に配置*/

	.stack : {
		_stack = . ;	/*スタックを指すシンボルを配置する*/
	} > stack							

}
